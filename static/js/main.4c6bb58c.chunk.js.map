{"version":3,"sources":["api/get.js","api/index.js","components/Characters/Character.jsx","components/Characters/Characters.jsx","components/Episodes/EpisodeRow.jsx","components/Episodes/Episodes.jsx","components/Locations/LocationRow.jsx","components/Locations/Locations.jsx","components/WatchList/Todo.jsx","components/WatchList/WatchList.jsx","App.jsx","index.jsx"],"names":["https","require","exports","get","endpointUrl","Promise","resolve","reject","url","response","setEncoding","body","on","data","error","JSON","parse","statusCode","validate","qry","Number","isInteger","Array","isArray","Object","keys","map","key","encodeURIComponent","join","Error","getEndpoint","a","endpoint","opt","query","status","getCharacter","getLocation","getEpisode","getModalStyle","top","left","transform","color","useStyles","makeStyles","theme","root","height","width","objectFit","margin","transition","boxShadow","modal","display","alignItems","justifyContent","paper","position","backgroundColor","palette","background","shadows","padding","spacing","Character","char","classes","useState","modalStyle","open","setOpen","className","GridListTile","src","image","onClick","alt","name","title","GridListTileBar","Modal","aria-labelledby","aria-describedby","onClose","style","id","species","gender","location","Characters","characters","setCharacters","info","setInfo","setSpecies","setStatus","setGender","setQuery","useEffect","then","result","results","console","log","onSpeciesChange","useCallback","event","target","value","onStatusChange","onGenderChange","class","InputLabel","Select","native","onChange","curSpecies","toUpperCase","curStatus","curGender","undefined","Pagination","count","pages","showFirstButton","showLastButton","page","fetchPage","GridList","EpisodeRow","episode","React","TableRow","TableCell","component","scope","align","tableContainer","table","maxWidth","search","borderRadius","shape","fade","common","white","searchIcon","pointerEvents","inputRoot","inputInput","paddingLeft","pagination","Episodes","episodes","setEpisodes","Toolbar","InputBase","e","placeholder","input","fullWidth","inputProps","TableContainer","Paper","Table","aria-label","TableHead","TableBody","LocationRow","button","Locations","locations","setLocations","setName","type","setType","dimension","setDimension","onTypeChange","onDimensionChange","onNameChange","TextField","label","curType","curDimension","Todo","props","showBin","setState","hover","hideBin","state","onMouseLeave","this","onMouseEnter","done","Checkbox","markDone","index","checked","todo","IconButton","removeTodo","Component","WatchList","handleChange","empty","addTodo","length","todosArr","setTimeout","localStorage","setItem","stringify","array","splice","deleteAll","window","confirm","clear","keyPress","getItem","fill","fontSize","variant","onKeyPress","Box","ml","item","i","App","to","activeClassName","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4c6bb58c.chunk.js","sourcesContent":["const https = require('https')\n\nconst baseUrl = 'https://rickandmortyapi.com/api/'\n\nfunction get(endpointUrl) {\n  return new Promise((resolve, reject) => {\n    const url = `${baseUrl}${endpointUrl}`\n    https.get(url, response => {\n      response.setEncoding('utf8')\n      let body = ''\n\n      response.on('data', data => (body += data))\n\n      response.on('error', error => reject(error))\n\n      response.on('end', () => {\n        body = JSON.parse(body)\n        response.data = body\n        if (response.statusCode >= 200 && response.statusCode < 300) {\n          resolve(response)\n        } else {\n          reject(response)\n        }\n      })\n    })\n  })\n}\n\nexports.get = get","const { get } = require('./get')\n\nconst validate = qry => {\n  if (typeof qry === 'number' && Number.isInteger(qry) || Array.isArray(qry)) {\n    return `/${qry}`\n  }\n\n  if (typeof qry === 'object') {\n    return `/?${Object.keys(qry)\n      .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(qry[key])}`)\n      .join('&')}`\n  }\n\n  throw new Error('As argument use an object, an array, an integer or leave it blank')\n}\n\nconst getEndpoint = async (endpoint = '', opt = {}) => {\n  const query = validate(opt)\n\n  try {\n    const { data } = await get(endpoint + query)\n    return data\n  } catch (e) {\n    return {\n      status: e.statusCode,\n      error: e.data.error\n    }\n  }\n}\n\nexport const getEndpoints = () => getEndpoint();\nexport const getCharacter = (opt = {}) => getEndpoint('character', opt);\nexport const getLocation = (opt = {}) => getEndpoint('location', opt);\nexport const getEpisode = (opt = {}) => getEndpoint('episode', opt);","import React, { useState } from \"react\";\nimport Modal from '@material-ui/core/Modal';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { GridListTile, GridListTileBar } from \"@material-ui/core\";\n\nfunction getModalStyle() {\n  return {\n    top: `50%`,\n    left: `50%`,\n    transform: `translate(-50%, -50%)`,\n    color: 'black',\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '10rem',\n    width: '10rem',\n    objectFit: 'cover',\n    margin: \"1rem\",\n    transition: 'transform 0.5s',\n      '&:hover': {\n        boxShadow: '0 10px 10px rgba(88, 176, 192, 0.8)',\n      },\n    },\n    modal: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    paper: {\n      position: 'absolute',\n      width: 450,\n      backgroundColor: theme.palette.background.paper,\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3),\n    },\n  }\n));\n\nexport const Character = ({ char }) => {\n  const classes = useStyles();\n  const [modalStyle] = useState(getModalStyle);\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <div className='grid-list'>\n        <GridListTile\n          key={char.image}\n          className={classes.root}\n        >\n          <img\n          src={char.image}\n          onClick={handleOpen}\n          alt={char.name}\n          title={char.name}\n          />\n        <GridListTileBar\n          title={char.name}\n        />\n        </GridListTile>\n      </div>\n      <Modal\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n        open={open}\n        onClose={handleClose}\n      >\n        <div\n          style={modalStyle}\n          className={classes.paper}\n        >\n          <h2>{char.name}</h2>\n          <img src={char.image} alt=\"NoPic\"/>\n          <p>\n            <b>Id</b>: {char.id} <br/>\n            <b>Status</b>: {char.status} <br/>\n            <b>Species</b>: {char.species} <br/>\n            <b>Gender</b>: {char.gender} <br/>\n            <b>Location</b>: {char.location.name} <br/>\n          </p>\n        </div>\n      </Modal>\n    </>\n  );\n};\n","import React from 'react';\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport GridList from \"@material-ui/core/GridList\";\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport { useState, useEffect, useCallback } from 'react';\nimport { getCharacter } from '../../api/index';\nimport { Character } from \"./Character\";\nimport './Characters.css'\n\nexport const Characters = () => {\n  const [characters, setCharacters] = useState([]);\n  const [info, setInfo] = useState({})\n  const [species, setSpecies] = useState('All');\n  const [status, setStatus] = useState('All');\n  const [gender, setGender] = useState('All');\n  const [query, setQuery] = useState('');\n\n  const speciesList = ['unknown', 'human', 'alien', 'humanoid', 'animal', 'Robot', 'Cronenberg', 'Poopybutthole', 'Metholog', 'Vampire'];\n  const statusList = ['alive', 'dead', 'unknown'];\n  const genderList = ['male', 'female', 'genderless', 'unknown'];\n\n  useEffect(() => {\n    getCharacter().then(result => {\n      setCharacters(result.results);\n      setInfo(result.info);\n    });\n  }, []);\n\n  const fetchPage = (page) => {\n    getCharacter({\n      ...query,\n      'page': page}).then(result => {\n      setCharacters(result.results);\n      setInfo(result.info);\n    });\n  }\n  \n  useEffect(() => {\n    const speciesString = species === 'All' ? '' : species;\n    const statusString = status === 'All' ? '' : status;\n    const genderString = gender === 'All' ? '' : gender;\n\n    const query =  {\n      'species': speciesString,\n      'status': statusString,\n      'gender': genderString\n    }\n    setQuery(query)\n    console.log(query);\n    getCharacter(query).then(result => {\n      setCharacters(result.results);\n      setInfo(result.info);\n    });\n  }, [species, status, gender]);\n\n  const onSpeciesChange = useCallback(\n    (event) => {\n      setSpecies(event.target.value)\n    },\n    [],\n  )\n\n  const onStatusChange = useCallback(\n    (event) => {\n      setStatus(event.target.value)\n    },\n    [],\n  )\n\n  const onGenderChange = useCallback(\n    (event) => {\n      setGender(event.target.value)\n    },\n    [],\n  )\n\n  return (\n  <div>\n    <div class='filters'>\n      <div class=\"filter__item\">\n        <InputLabel id=\"species\">Species</InputLabel>\n        <Select\n          id=\"species\"\n          native\n          value={species}\n          onChange={onSpeciesChange}\n        >\n          <option\n            value='All'\n            key='All'\n          >\n            ALL\n          </option>\n          {speciesList.map(curSpecies => (\n          <option\n            value={curSpecies}\n            key={curSpecies}\n          >\n            {curSpecies.toUpperCase()}\n          </option>\n          ))}\n        </Select>\n      </div>\n\n      <div class=\"filter__item\">\n        <InputLabel id=\"status\">Status</InputLabel>\n          <Select\n            id=\"status\"\n            native\n            value={status}\n            onChange={onStatusChange}\n          >\n          <option\n            value='All'\n            key='All'\n          >\n            ALL\n          </option>\n          {statusList.map(curStatus => (\n          <option\n            value={curStatus}\n            key={curStatus}\n          >\n            {curStatus.toUpperCase()}\n          </option>\n          ))}\n        </Select>\n      </div>\n\n      <div class=\"filter__item\">\n        <InputLabel id=\"gender\">Gender</InputLabel>\n        <Select\n          id=\"gender\"\n          native\n          value={gender}\n          onChange={onGenderChange}\n        >\n          <option\n            value='All'\n            key='All'\n          >\n            ALL\n          </option>\n          {genderList.map(curGender => (\n            <option\n              value={curGender}\n              key={curGender}\n            >\n              {curGender.toUpperCase()}\n            </option>\n          ))}\n        </Select>\n      </div>\n    </div>\n\n    {characters !== undefined && info !== undefined &&\n    <div>\n      <div className=\"pagination\">\n        <Pagination\n          count={info.pages}\n          color=\"primary\"\n          showFirstButton \n          showLastButton \n          onChange={(event, page) => fetchPage(page)}\n        ></Pagination>\n      </div>\n      <GridList>\n        {characters.map((char) => (\n        <Character\n          key={char.id}\n          char={char}\n        ></Character>\n        ))}\n      </GridList>\n    </div>}\n  </div>\n  )\n};\n\n","import React from \"react\";\nimport Modal from '@material-ui/core/Modal';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nfunction getModalStyle() {\n  return {\n      top: `50%`,\n      left: `50%`,\n      transform: `translate(-50%, -50%)`,\n      color: 'black',\n  };\n};\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    position: 'absolute',\n    width: 450,\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n  }\n));\n\nexport const EpisodeRow = ({ episode }) => {\nconst classes = useStyles();\nconst [modalStyle] = React.useState(getModalStyle);\nconst [open, setOpen] = React.useState(false);\n\nconst handleOpen = () => {\n  setOpen(true);\n};\n\nconst handleClose = () => {\n  setOpen(false);\n};\n\nreturn(\n<>\n  <TableRow key={episode.id} onClick={handleOpen}>\n    <TableCell\n      component=\"th\"\n      scope=\"row\"\n    >\n      <span>{episode.id}</span>\n    </TableCell>\n    <TableCell\n      align=\"right\"\n    >\n      {episode.name}\n    </TableCell>\n  </TableRow>\n\n  <Modal\n    aria-labelledby=\"simple-modal-title\"\n    aria-describedby=\"simple-modal-description\"\n    open={open}\n    onClose={handleClose}\n  >\n    <div style={modalStyle} className={classes.paper}>\n      <h2>{episode.name}</h2>\n      <p>\n        <b>Id</b>: {episode.id} <br/>\n        <b>Air date</b>: {episode['air_date']} <br/>\n        <b>Episode</b>: {episode.episode} <br/>\n      </p>\n    </div>\n  </Modal>\n</>\n  );\n};\n","import React from 'react';\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { EpisodeRow } from './EpisodeRow'\nimport { useState, useEffect } from 'react';\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\nimport { getEpisode } from '../../api';\nimport './Episodes.css'\n\nconst useStyles = makeStyles((theme) => ({\n  tableContainer: {\n    backgroundColor: \"#40E0D0\",\n  },\n  table: {\n    maxWidth: 400,\n    margin: \"auto\",\n    backgroundColor: \"#40E0D0\",\n  },\n  search: {\n    color: \"#3f51b5\",\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    margin: \"auto\",\n    width: \"100%\",\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  inputRoot: {\n    color: \"#3f51b5\",\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    width: \"80%\",\n  },\n  pagination: {\n    margin: 20,\n  },\n}));\n\nexport const Episodes = () => {\n  const classes = useStyles();\n  const [episodes, setEpisodes] = useState([]);\n  const [info, setInfo] = useState({})\n  const [query, setQuery] = useState({});\n\n  useEffect(() => {\n    getEpisode(query).then(result => {\n      setEpisodes(result.results);\n      setInfo(result.info);\n    });\n  }, [query]);\n\n  const changeQueryToSearch = (value) => {\n    setQuery({\n      'name': value\n    });\n    console.log(query);\n    getEpisode(query).then(result => {\n      setEpisodes(result.results);\n      setInfo(result.info);\n    });\n  };\n\n  const fetchPage = (page) => {\n    getEpisode({\n      ...query,\n      'page': page}).then(result => {\n      setEpisodes(result.results);\n      setInfo(result.info);\n    });\n  };\n\n  return(\n  <div className=\"episodes\">\n    <Toolbar>\n      <div className={classes.search}>\n        <div className={classes.searchIcon}>\n          <SearchIcon />\n        </div>\n        <InputBase\n          onChange={(e) => {\n            changeQueryToSearch(e.target.value)}}\n          placeholder=\"Search Episodes\"\n          classes={{\n            root: classes.inputRoot,\n            input: classes.inputInput,\n          }}\n          fullWidth={true}\n          inputProps={{ \"aria-label\": \"search\" }}\n        />\n      </div>\n    </Toolbar>\n\n    {episodes !== undefined && info !== undefined &&\n      <div>\n        <div className=\"pagination\">\n          <Pagination\n              className={classes.pagination}\n              count={info.pages}\n              color=\"primary\"\n              showFirstButton \n              showLastButton \n              onChange={(event, page) => fetchPage(page)}\n          ></Pagination>\n        </div>\n        <TableContainer\n          component={Paper}\n          className={classes.tableContainer}\n        >\n          <Table\n            className={classes.table}\n            aria-label=\"simple table\"\n          >\n            <TableHead>\n              <TableRow>\n                <TableCell>\n                  <b>Id</b>\n                </TableCell>\n                <TableCell\n                  align=\"right\"\n                >\n                  <b>Name</b>\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {episodes.map((episode) => (\n                <EpisodeRow\n                  key={episode.id}\n                  episode={episode}\n                ></EpisodeRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </div>\n    }\n  </div>\n  );\n  };\n","import React from \"react\";\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\n\nexport const LocationRow = ({ location }) => {\nreturn(\n<>\n  <TableRow key={location.id}>\n    <TableCell\n      component=\"th\"\n      scope=\"row\"\n    >\n      <span>{location.id}</span>\n    </TableCell>\n    <TableCell\n      align=\"right\"\n    >\n      {location.name}\n    </TableCell>\n  </TableRow>\n</>\n  );\n};\n","import React from 'react';\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport { LocationRow } from './LocationRow'\nimport { useState, useEffect, useCallback } from 'react';\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\nimport { getLocation } from '../../api';\n\nconst useStyles = makeStyles((theme) => ({\n  tableContainer: {\n    backgroundColor: \"#40E0D0\",\n  },\n  table: {\n    color: \"white\",\n    maxWidth: 400,\n    margin: \"auto\",\n    backgroundColor: \"#40E0D0\",\n  },\n  search: {\n    color: \"#3f51b5\",\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    margin: \"auto\",\n    width: \"100%\",\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  inputRoot: {\n    color: \"#3f51b5\",\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    width: \"80%\",\n  },\n  button: {\n\n  },\n  pagination: {\n    margin: 20,\n  },\n}));\n\n\nexport const Locations = () => {\n  const classes = useStyles();\n  const [locations, setLocations] = useState([]);\n  const [info, setInfo] = useState({})\n  const [query, setQuery] = useState({});\n  const [name, setName] = useState('');\n  const [type, setType] = useState('All');\n  const [dimension, setDimension] = useState('All');\n\n  const dimensions = [\"unknown\", \"Dimension C-137\", \"Post-Apocalyptic Dimension\", \"Replacement Dimension\", \"Cronenberg Dimension\", \"Fantasy Dimension\", \"Dimension 5-126\"];\n  const types = [\"Planet\", \"Cluster\", \"Space station\", \"Microverse\", \"TV\", \"Resort\", \"Fantasy town\", \"Dream\"];\n\n  useEffect(() => {\n    getLocation().then(result => {\n      setLocations(result.results);\n      setInfo(result.info);\n    });\n  }, []);\n\n  useEffect(() => {\n    const nameString = name === 'All' ? '' : name;\n    const dimensionString = dimension === 'All' ? '' : dimension;\n    const typeString = type === 'All' ? '' : type;\n\n      const query =  {\n        'name': nameString,\n        'dimension': dimensionString,\n        'type': typeString\n      }\n      setQuery(query)\n      console.log(query);\n      getLocation(query).then(result => {\n        setLocations(result.results);\n        setInfo(result.info);\n      });\n    }, [name, type, dimension]);\n\n  const fetchPage = (page) => {\n    getLocation({\n      ...query,\n      'page': page}).then(result => {\n      setLocations(result.results);\n      setInfo(result.info);\n    });\n  }\n\n  const onTypeChange = useCallback(\n    (event) => {\n      setType(event.target.value)\n    },\n    [],\n  )\n\n  const onDimensionChange = useCallback(\n    (event) => {\n      setDimension(event.target.value)\n    },\n    [],\n  );\n\n  const onNameChange = useCallback(\n    (value) => {\n      setName(value)\n    },\n    [],\n  );\n\n  return(\n    <>\n      <div class='filters'>\n        <div class=\"filter__item\">\n          <TextField\n            id=\"standard-search\"\n            label=\"Search field\"\n            type=\"search\"\n            onChange={e => onNameChange(e.target.value)}/>\n        </div>\n        <div class=\"filter__item\">\n          <InputLabel id=\"type\">Type</InputLabel>\n            <Select\n              id=\"type\"\n              native\n              value={type}\n              onChange={onTypeChange}\n            >\n            <option\n              value='All'\n              key='All'\n            >\n              ALL\n            </option>\n            {types.map(curType => (\n            <option\n              value={curType}\n              key={curType}\n            >\n              {curType.toUpperCase()}\n            </option>\n            ))}\n          </Select>\n        </div>\n        <div class=\"filter__item\">\n          <InputLabel id=\"dimension\">Dimension</InputLabel>\n          <Select\n            id=\"dimension\"\n            native\n            value={dimension}\n            onChange={onDimensionChange}\n          >\n            <option\n              value='All'\n              key='All'\n            >\n              ALL\n            </option>\n            {dimensions.map(curDimension => (\n              <option\n                value={curDimension}\n                key={curDimension}\n              >\n                {curDimension.toUpperCase()}\n              </option>\n            ))}\n          </Select>\n        </div>\n      </div>\n\n      {locations !== undefined && info !== undefined &&\n        <div>\n          <div className=\"pagination\">\n            <Pagination\n                className={classes.pagination}\n                count={info.pages}\n                color=\"primary\"\n                showFirstButton \n                showLastButton \n                onChange={(event, page) => fetchPage(page)}\n            ></Pagination>\n          </div>\n          <TableContainer\n            component={Paper}\n            className={classes.tableContainer}\n          >\n            <Table\n              className={classes.table}\n              aria-label=\"simple table\"\n            >\n              <TableHead>\n                <TableRow>\n                  <TableCell>\n                    <b>Id</b>\n                  </TableCell>\n                  <TableCell\n                    align=\"right\"\n                  >\n                    <b>Name</b>\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {locations.map((location) => (\n                  <LocationRow\n                    key={location.id}\n                    location={location}\n                  ></LocationRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </div>\n      }\n    </>\n  );\n};\n\n","import React, { Component } from \"react\";\nimport \"./Todo.css\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nclass Todo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hover: false,\n    };\n  }\n\n  showBin = () => {\n    this.setState({ hover: true });\n  };\n\n  hideBin = () => {\n    this.setState({ hover: false });\n  };\n\n  render() {\n    return (\n      <div>\n        <p\n          onMouseLeave={this.hideBin}\n          onMouseEnter={this.showBin}\n          className={this.props.done ? \"finished\" : null}\n        >\n          <span className='text-color'>\n            <Checkbox\n              title=\"Mark Done\"\n              onClick={() => this.props.markDone(this.props.index)}\n              checked={this.props.done}\n              color=\"primary\"\n            />\n            {this.props.todo}\n          </span>\n          {this.state.hover && (\n            <IconButton\n              title=\"Remove Todo\"\n              color=\"secondary\"\n              onClick={() => this.props.removeTodo(this.props.index)}\n              aria-label=\"delete\">\n              <DeleteIcon />\n            </IconButton>\n          )}\n        </p>\n        <hr />\n      </div>\n    );\n  }\n}\n\nexport default Todo;","import React, { Component } from \"react\";\nimport Todo from \"./Todo\";\nimport TextField from \"@material-ui/core/TextField\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ClearAllIcon from \"@material-ui/icons/ClearAll\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport Box from \"@material-ui/core/Box\";\nimport \"./WatchList.css\";\n\nexport class WatchList extends Component {\n  constructor() {\n    super();\n    this.state = {\n      todo: \"\",\n      todosArr: [],\n      empty: false,\n    };\n  }\n\n  componentDidMount() {\n    let data = localStorage.getItem(\"todo\");\n\n    if (data !== null) {\n      this.setState({ todosArr: JSON.parse(data) });\n    }\n  }\n\n  handleChange = (event) => {\n    this.setState({ empty: false });\n    this.setState({ todo: event.target.value });\n  };\n\n  addTodo = () => {\n    if (this.state.todo.length > 0) {\n      this.setState({ todosArr: [...this.state.todosArr, { todo: this.state.todo, done: false }] });\n      setTimeout(() => {\n        localStorage.setItem(\"todo\", JSON.stringify(this.state.todosArr));\n      }, 500);\n      this.setState({ todo: \"\" });\n    } else {\n      this.setState({ empty: true });\n    }\n  };\n\n  removeTodo = (index) => {\n    const array = [...this.state.todosArr];\n    array.splice(index, 1);\n    this.setState({ todosArr: array });\n\n    setTimeout(() => {\n      localStorage.setItem(\"todo\", JSON.stringify(this.state.todosArr));\n    }, 500);\n  };\n\n  deleteAll = () => {\n    let del = window.confirm(\"Delete Todos?\");\n    if (del) {\n      this.setState({ todosArr: [] });\n      localStorage.clear();\n    }\n  };\n\n  markDone = (index) => {\n    let data = this.state.todosArr;\n    data[index].done = !data[index].done;\n\n    this.setState({\n      todosArr: data,\n    });\n\n    setTimeout(() => {\n      localStorage.setItem(\"todo\", JSON.stringify(this.state.todosArr));\n    }, 500);\n  };\n\n  keyPress = (event) => {\n    if (event.key === \"Enter\") {\n      this.addTodo();\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"header\">\n          <IconButton\n          className=\"delete\"\n          title=\"Clear List\"\n          onClick={this.deleteAll}\n          aria-label=\"delete\"\n          >\n            <ClearAllIcon\n              style={{ fill: \"white\" }}\n              fontSize=\"large\" />\n          </IconButton>\n        </div>\n\n        <div className=\"inputField\">\n          <TextField\n            className=\"input\"\n            error={this.state.empty}\n            value={this.state.todo}\n            id=\"outlined-basic\"\n            label={this.state.empty ? \"Add ToWatch\" : \"ToWatch\"}\n            variant=\"outlined\"\n            onKeyPress={this.keyPress}\n            onChange={this.handleChange}\n          />\n          <Box ml={0.5}>\n            <IconButton\n              title=\"Add ToWatch\"\n              className=\"add\"\n              onClick={this.addTodo}\n              aria-label=\"delete\"\n            >\n              <AddCircleIcon\n                style={{ fill: \"#4bd863\" }}\n                fontSize=\"large\" />\n            </IconButton>\n          </Box>\n        </div>\n        \n        {this.state.todosArr.map((item, i) => {\n          return <Todo\n                    removeTodo={this.removeTodo}\n                    key={i}\n                    index={i}\n                    markDone={this.markDone}\n                    done={item.done}\n                    todo={item.todo}\n                />;\n        })}\n      </div>\n    );\n  }\n}","import React from 'react';\nimport './App.css'\nimport {\n  Route,\n  NavLink,\n  Switch,\n} from 'react-router-dom';\nimport { Characters } from './components/Characters/Characters';\nimport { Episodes } from './components/Episodes/Episodes';\nimport { Locations } from './components/Locations/Locations';\nimport { WatchList } from './components/WatchList/WatchList';\n\nconst App = () => (\n  <div className=\"App\">\n    <nav className=\"menu\">\n      <NavLink to=\"/characters\" className=\"normal\" activeClassName=\"active\" exact>Characters</NavLink>\n      <NavLink to=\"/episodes\" className=\"normal\" activeClassName=\"active\" exact>Episodes</NavLink>\n      <NavLink to=\"/locations\" className=\"normal\" activeClassName=\"active\" exact>Locations</NavLink>\n      <NavLink to=\"/watch-list\" className=\"normal\" activeClassName=\"active\" exact>Watch List</NavLink>\n    </nav>\n\n    <Switch>\n      <Route path=\"/\" exact component={Characters} />\n      <Route path=\"/characters\" exact component={Characters} />\n      <Route path=\"/episodes\" exact component={Episodes} />\n      <Route path=\"/locations\" exact component={Locations} />\n      <Route path=\"/watch-list\" exact component={WatchList} />\n    </Switch>\n\n  </div>\n);\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n      <App />\n  </HashRouter>, document.getElementById('root'),\n);"],"sourceRoot":""}